<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="Handy_Classes_HBase" xmlns="http://docbook.org/ns/docbook">
  <title>Handy Classes for HBase</title>
  <note>
      The original article was published by Sujee Maniyam at his website: <ulink  url="http://sujee.net/tech/articles/hadoop/hadoop-useful-classes/">here</ulink>
  </note>
  <para>
      These are some handy 'utility' classes bundled with Hadoop HBase.
  </para>

  <sect1>
      <title>Bytes </title>
      <para>
          class : org.apache.hadoop.hbase.util.Bytes <sbr />
      jar : HBASE_HOME/lib/hbase-*.jar <sbr/>
      </para>

      <para>
          Handy utility for dealing with bytes and byte arrays:
      </para>

      <sect2>
          <title>Converting objects to bytes</title>

      <programlisting language="java">
 // -------- Bytes.toBytes() : converting objects to bytes ------
int i = 10000;
byte [] intBytes = Bytes.toBytes(i);
System.out.println ("int " + i + " in bytes : " + Arrays.toString(intBytes));

float f = (float) 999.993;
byte [] floatBytes = Bytes.toBytes(f);
System.out.println ("float " + f + " in bytes : " + Arrays.toString(floatBytes));

String s = "foobar";
byte [] stringBytes = Bytes.toBytes(s);
System.out.println ("string " + s + " in bytes : " + Arrays.toString(stringBytes));

/* output:
int 10000 in bytes : [0, 0, 39, 16]
float 999.993 in bytes : [68, 121, -1, -115]
string foobar in bytes : [102, 111, 111, 98, 97, 114]
*/

      </programlisting>
  </sect2>


  <sect2>
      <title>Bytes.add()  : create composite keys</title>
      <programlisting language="java">
// ---------- Bytes.add() : creating composite keys ---------
// rowkey = int + long
int i = 0;
long timestamp = System.currentTimeMillis();
byte [] rowkey2 = Bytes.add(Bytes.toBytes(i), Bytes.toBytes(timestamp));
System.out.println ("rowkey2 (" + rowkey2.length + ") : " + Arrays.toString(rowkey2));

// add also supports adding 3 byte arrays
// rowkey = int + str + long
byte[] rowkey3 = Bytes.add(Bytes.toBytes(0) , Bytes.toBytes("hello"),  Bytes.toBytes(timestamp));
System.out.println ("rowkey3 (" + rowkey3.length + ") : " + Arrays.toString(rowkey3));

/* output:
rowkey2 (12) : [0, 0, 0, 0, 0, 0, 1, 50, 8, -101, 99, -41]
rowkey3 (17) : [0, 0, 0, 0, 104, 101, 108, 108, 111, 0, 0, 1, 50, 8, -101, 99, -41]
*/

      </programlisting>
  </sect2>

  </sect1>


</chapter>
